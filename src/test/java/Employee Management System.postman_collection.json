{
	"info": {
		"_postman_id": "57acbfaa-c6a6-434a-83ee-aa6e73e41955",
		"name": "Employee Management System",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "find employee by ID",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('id check should fail',function(){\r",
							"    pm.response.to.have.status(400);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/employees/1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"employees",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Employee Without Name Attribute Test 1",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('create employee without name attribute should fail',function(){\r",
							"    pm.response.to.have.status(400);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/employees/",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"employees",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Employee Without Name Attribute Test 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('create employee with blank name should fail',function(){\r",
							"    pm.response.to.have.status(400);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"name\":\"\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/employees/",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"employees",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Employee Success",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('create employee success',function(){\r",
							"    pm.response.to.have.status(200);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"name\":\"Vipul\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/employees/",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"employees",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Please provide either state or substate in the request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Please provide either state or substate in the request',function(){\r",
							"    pm.response.to.have.status(400);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"id\":1}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/employees/",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"employees",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Please provide either state or substate in the request, not both",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Please provide either state or substate in the request not both',function(){\r",
							"    pm.response.to.have.status(400);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"id\":1, \"state\":\"IN_CHECK\", \"substate\":\"SECURITY_CHECK_FINISHED\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/employees/",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"employees",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Employee's Current State is already the requested state",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Employees Current State is already the requested state',function(){\r",
							"    pm.response.to.have.status(400);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"id\":1, \"state\":\"ADDED\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/employees/",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"employees",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Successful State Transition",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Successful State Transition',function(){\r",
							"    pm.response.to.have.status(200);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"id\":1, \"state\":\"IN_CHECK\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/employees/",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"employees",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Invalid Target State Requested",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Invalid Target State Requested',function(){\r",
							"    pm.response.to.have.status(400);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"id\":1,\"state\":\"TEMP_STATE\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/employees/",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"employees",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "State Already Completed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('State Already Completed',function(){\r",
							"    pm.response.to.have.status(400);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"id\":1, \"state\":\"ADDED\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/employees/",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"employees",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Dependency State Needs To Be Completed Before Target State",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Dependency State Needs To Be Completed Before Target State',function(){\r",
							"    pm.response.to.have.status(400);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"id\":1, \"state\":\"ACTIVE\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/employees/",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"employees",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Invalid Target Substate Requested",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Invalid Target Substate Requested',function(){\r",
							"    pm.response.to.have.status(400);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"id\":1,\"substate\":\"TEMP_SUBSTATE\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/employees/",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"employees",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Successful Substate Transition",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Successful Substate Transition',function(){\r",
							"    pm.response.to.have.status(200);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"id\":1, \"substate\":\"SECURITY_CHECK_FINISHED\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/employees/",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"employees",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Substate Already Completed",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Substate Already Completed',function(){\r",
							"    pm.response.to.have.status(400);\r",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\"id\":1, \"substate\":\"SECURITY_CHECK_FINISHED\"}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/employees/",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"employees",
						""
					]
				}
			},
			"response": []
		}
	]
}